name: Backend CI

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: ProjectPortfolio
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -ppassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Wait for MySQL to start
        run: |
          until mysqladmin ping -h 127.0.0.1 -P 3306 --silent; do
            echo "waiting for mysql"
            sleep 2
          done
      - name: Create MySQL user
        run: |
          mysql -h 127.0.0.1 -P 3306 -uroot -ppassword -e "CREATE USER 'ProjectPortfolioUser' IDENTIFIED BY 'root';"
          mysql -h 127.0.0.1 -P 3306 -uroot -ppassword -e "GRANT ALL PRIVILEGES ON *.* TO 'ProjectPortfolioUser';"
          mysql -h 127.0.0.1 -P 3306 -uroot -ppassword -e "FLUSH PRIVILEGES;"
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Run tests
        run: mvn -B test --file pom.xml
        env:
          SPRING_PROFILES_ACTIVE: ci
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/ProjectPortfolio
          SPRING_DATASOURCE_USERNAME: ProjectPortfolioUser
          SPRING_DATASOURCE_PASSWORD: root



#name: Backend CI
#
#on:
#  push:
#    branches:
#      - ci-setup
#  pull_request:
#    branches:
#      - ci-setup
#
#jobs:
#  build-and-test:
#    runs-on: ubuntu-latest
#
#    defaults:
#      run:
#        working-directory: backend
#
#    services:
#      mysql:
#        image: mysql:latest
#        env:
#          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
#          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
#        ports:
#          - 3306:3306
#        options: >-
#          --health-cmd='mysqladmin ping -h localhost -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }}' --health-interval=10s --health-timeout=5s --health-retries=5
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 21
#        uses: actions/setup-java@v3
#        with:
#          java-version: '21'
#          distribution: 'temurin'
#          cache: 'maven'
#      - name: Setup Environment Variables
#        run: |
#          touch .env
#          echo SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/${{ secrets.MYSQL_DATABASE }} >> .env
#          echo SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} >> .env
#          echo SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} >> .env
#          cat .env
#      - name: Wait for MySQL to start
#        run: |
#          until mysqladmin ping -h 127.0.0.1 -P 3306 --silent; do
#            echo "waiting for mysql"
#            sleep 2
#          done
#      - name: Create MySQL user
#        run: |
#          mysql -h 127.0.0.1 -P 3306 -uroot -p${{ secrets.MYSQL_ROOT_PASSWORD }} -e "CREATE USER '${{ secrets.SPRING_DATASOURCE_USERNAME }}' IDENTIFIED BY '${{ secrets.SPRING_DATASOURCE_PASSWORD }}';"
#          mysql -h 127.0.0.1 -P 3306 -uroot -p${{ secrets.MYSQL_ROOT_PASSWORD }} -e "GRANT ALL PRIVILEGES ON *.* TO '${{ secrets.SPRING_DATASOURCE_USERNAME }}';"
#          mysql -h 127.0.0.1 -P 3306 -uroot -p${{ secrets.MYSQL_ROOT_PASSWORD }} -e "FLUSH PRIVILEGES;"
#      - name: Build with Maven
#        run: mvn -B package --file ./pom.xml
#      - name: Run tests
#        run: mvn -B test --file ./pom.xml
#        env:
#          SPRING_PROFILES_ACTIVE: ci
